{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","setIsActiveModal","setTodo","filtredTodos","selectTodo","className","map","todo","id","completed","cn","title","type","onClick","handelActivetedModal","TodoFilter","setFiltredTodos","todos","useState","selectFilter","setSelectFilter","query","setQuery","debounced","useDebouncedCallback","value","useEffect","searchQury","todosList","filteredBySelect","nameFilter","todosLis","filter","filtredByComleted","filteredByQuery","toLowerCase","includes","onChange","event","window","console","dir","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","setUser","isLoadedUser","setIsLoadedUser","userId","usersData","href","email","name","App","isLoaded","setIsLoaded","isActiveModal","setTodos","todosData","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfec6fcd.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  setIsActiveModal:(isActiveModal:boolean) => void;\n  setTodo: (todo: Todo) => void;\n  filtredTodos: Todo[];\n  selectTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    setIsActiveModal,\n    setTodo,\n    filtredTodos,\n    selectTodo,\n  } = props;\n\n  const handelActivetedModal = (todo: Todo) => {\n    setIsActiveModal(true);\n    setTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        { filtredTodos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"has-background-info-light\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handelActivetedModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    { 'fa-eye-slash': todo.id === selectTodo?.id },\n                    'fa-eye',\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { SetStateAction, useEffect, useState } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  setFiltredTodos: (todo:Todo[]) => void,\n}\n\nconst filtredByComleted = (nameFilter: string, todosLis: Todo[]): Todo[] => {\n  switch (nameFilter) {\n    case 'completed':\n      return todosLis.filter(todo => todo.completed === true);\n\n    case 'active':\n      return todosLis.filter(todo => todo.completed === false);\n\n    case 'all':\n      return todosLis;\n\n    default:\n      return todosLis;\n  }\n};\n\nconst filredByQuery = (searchQury: string, todosList: Todo[]): Todo[] => {\n  if (searchQury === '') {\n    return todosList;\n  }\n\n  return (todosList\n    .filter(\n      todo => todo.title.toLowerCase().includes(searchQury.toLowerCase()),\n    ));\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const { setFiltredTodos, todos } = props;\n\n  const [selectFilter, setSelectFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const handelSelectFiter = (\n    event: { target: { value: SetStateAction<string>; }; },\n  ) => {\n    window.console.dir(event.target.value);\n    setSelectFilter(event.target.value);\n  };\n\n  const debounced = useDebouncedCallback(\n    (value: Todo[]) => {\n      setFiltredTodos(value);\n    },\n    1000,\n  );\n\n  useEffect(() => {\n    const filteredBySelect = filtredByComleted(selectFilter, todos);\n    const filteredByQuery = filredByQuery(query, filteredBySelect);\n\n    debounced(filteredByQuery);\n  }, [selectFilter, query]);\n\n  const handelSearchQuery = (\n    event: { target: { value: SetStateAction<string>; }; },\n  ) => {\n    setQuery(event.target.value);\n  };\n\n  const handelCloseSearch = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectFilter}\n            onChange={handelSelectFiter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handelSearchQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query\n          && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"Mute volume\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handelCloseSearch}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo:Todo | null;\n  setIsActiveModal: (isActiveModal: boolean) => void;\n  setTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { todo, setIsActiveModal, setTodo } = props;\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoadedUser, setIsLoadedUser] = useState(false);\n\n  useEffect(() => {\n    if (todo !== null) {\n      getUser(todo.userId)\n        .then(usersData => {\n          if (usersData) {\n            setUser(usersData);\n            setIsLoadedUser(true);\n          }\n        });\n    }\n  },\n  []);\n\n  const handelCloseModal = () => {\n    setIsActiveModal(false);\n    setTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoadedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            <button\n              type=\"button\"\n              aria-label=\"Mute volume\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handelCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isActiveModal, setIsActiveModal] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filtredTodos, setFiltredTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setIsLoaded(false);\n    getTodos()\n      .then(todosData => {\n        if (todosData && todosData.length) {\n          setTodos(todosData);\n          setIsLoaded(true);\n          setFiltredTodos(todosData);\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFiltredTodos={setFiltredTodos}\n                todos={todos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    setIsActiveModal={setIsActiveModal}\n                    selectTodo={todo}\n                    setTodo={setTodo}\n                    filtredTodos={filtredTodos}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isActiveModal\n        && (\n          <TodoModal\n            todo={todo}\n            setIsActiveModal={setIsActiveModal}\n            setTodo={setTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}